@model AllVehiclesViewModel
@{
    ViewData["Title"] = "All vehicles";
}

<form method="get">
    <div class="row">
        <div class="form-group col-md-3">
            <label asp-for="SearchTerm"></label>
            <input asp-for="SearchTerm" class=" form-control" placeholder="What are you looking for?" />

        </div>

        <div class="form-group col-md-3">
            <div class="form-group">
                <label asp-for="Brand"></label>
                <select asp-for="Brand" class="form-control">
                    <option value="">All</option>
                    @foreach (var brand in Model.Brands)
                    {
                        <option value="@brand">@brand</option>
                    }
                </select>
            </div>
        </div>

        <div class="form-group col-md-3">
            <div class="form-group">
                <label asp-for="Sorting"></label>
                <select asp-for="Sorting" class="form-control">
                    <option value="0" selected>Latest</option>
                    <option value="1" selected>Year descending</option>
                    <option value="2" selected>Price descending</option>
                </select>
            </div>
        </div>

        <div class="form-group col-md-4">
            <input type="submit" class="btn btn-primary" value="Search" />

        </div>
    </div>
</form>
@{ 
    VehicleService service;
    List<VehicleServiceModel> vehicles = Model
        .Vehicles
        .Select(v=>new VehicleServiceModel
        {
            Id = v.Id,
            BrandName = v.Brand,
            FuelName = v.Fuel,
            HorsePower = v.HorsePower,
            Model = v.Model,
            ImageUrl = v.ImageUrl,
            Price = v.Price,
            Year = v.Year,
        }).ToList();
}
<partial name="_ListingVehiclesPartial" model="@vehicles" />
@{
    int previousPage = Model.CurrentPage - 1;
    previousPage = previousPage < 1 ? 1 : previousPage;

    var maxPage = Math.Ceiling((double)Model.TotalVehicles / AllVehiclesViewModel.VehiclesPerPage);
    var shouldButtonBeDisabled = Model.CurrentPage == maxPage ||
                                     !Model.Vehicles.Any();
}
<nav aria-label="Page navigation example">
    <ul class="pagination justify-content-center">
        <li class="page-item">
            <a class="btn btn-primary page-link @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
               asp-controller="Vehicle"
               asp-action="All"
               asp-route-currentPage="@(previousPage)"
               asp-route-brand="@Model.Brand"
               asp-route-searchTerm="@Model.SearchTerm"
               asp-route-sorting="@((int)Model.Sorting)">Previous</a>
        </li>
        &nbsp;
        &nbsp;
        &nbsp;

        <li class="page-item">
            <a class="btn btn-primary page-link @(shouldButtonBeDisabled ? "disabled" : string.Empty)" 
               asp-controller="Vehicle"
               asp-action="All"
               asp-route-currentPage="@(Model.CurrentPage+1)"
               asp-route-brand="@Model.Brand"
               asp-route-searchTerm="@Model.SearchTerm"
               asp-route-sorting="@((int)Model.Sorting)">Next</a>
        </li>

    </ul>
</nav>
